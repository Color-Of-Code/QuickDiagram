<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:view="clr-namespace:Codartis.SoftVis.UI.Wpf.View;assembly=SoftVis.Diagramming"
                    xmlns:viewModel="clr-namespace:Codartis.SoftVis.TestHostApp.UI"
                    xmlns:converters="clr-namespace:Codartis.SoftVis.Util.UI.Wpf.Converters;assembly=SoftVis.Util"
                    xmlns:testHostAppModeling="clr-namespace:Codartis.SoftVis.TestHostApp.Modeling"
                    xmlns:controls="clr-namespace:Codartis.SoftVis.Util.UI.Wpf.Controls;assembly=SoftVis.Util"
                    xmlns:modeling="clr-namespace:Codartis.SoftVis.Modeling;assembly=SoftVis.Diagramming"
                    mc:Ignorable="d" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SoftVis.Diagramming;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="/TestHostApp;component/Resources/DecoratorPlacementDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:DoubleMultiplierConverter x:Key="DoubleMultiplierConverter" />

    <Style TargetType="{x:Type view:DiagramControl}" >
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="Beige"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="DiagramFill" Value="Bisque"/>
        <Setter Property="DiagramStroke" Value="Black"/>
        <Setter Property="PanAndZoomControlHeight" Value="120"/>
        <Setter Property="RelatedNodeCuePlacementDictionary" Value="{StaticResource RelatedNodeCuePlacementDictionary}"/>
        <Setter Property="MiniButtonPlacementDictionary" Value="{StaticResource MiniButtonPlacementDictionary}"/>
    </Style>

    <Style TargetType="{x:Type view:DiagramNodeControl}">
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="MinWidth" Value="50"/>
    </Style>

    <DataTemplate DataType="{x:Type viewModel:PropertyDiagramNodeViewModel}">
        <view:DiagramNodeControl>
            <view:DiagramNodeControl.Style>
                <Style TargetType="view:DiagramNodeControl">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>

                                <Border Background="{Binding DiagramFill, ElementName=ThisControl}">
                                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" 
                                               HorizontalAlignment="Left" />
                                </Border>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </view:DiagramNodeControl.Style>
        </view:DiagramNodeControl>
    </DataTemplate>

    <Style TargetType="{x:Type view:DiagramNodeCoreControl}"
           d:DataContext="{d:DesignInstance {x:Type viewModel:TypeDiagramNodeViewModel}}">
        <Setter Property="ToolTip" Value="{Binding Path=TypeDiagramNode.TypeNode.FullName}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>

                    <Border BorderThickness="1"
                            BorderBrush="{Binding DiagramStroke, ElementName=ThisControl}"
                            Background="{Binding DiagramFill, ElementName=ThisControl}">
                        <StackPanel Orientation="Vertical" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <TextBlock Text="{Binding Path=Stereotype}" 
                                       FontSize="{Binding RelativeSource={RelativeSource Mode=Self}, Path=FontSize, Mode=OneTime,
                                        Converter={StaticResource DoubleMultiplierConverter}, ConverterParameter=.75}" 
                                       HorizontalAlignment="Center"/>
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock x:Name="TextBlock"
                                           Text="{Binding Path=Name, Mode=OneWay}" 
                                           HorizontalAlignment="Left" />
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=ModelNode.Origin}" Value="{x:Static modeling:ModelOrigin.SourceCode}">
                            <Setter TargetName="TextBlock" Property="FontWeight" Value="Bold"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=TypeDiagramNode.TypeNode.IsAbstract}" Value="true">
                            <Setter TargetName="TextBlock" Property="FontStyle" Value="Italic"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:BubbleListBoxItem}"
           d:DataContext="{d:DesignInstance {x:Type testHostAppModeling:TypeNode}}">
        <Setter Property="ToolTip" Value="{Binding FullName}"/>
    </Style>
</ResourceDictionary>