<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:ui="clr-namespace:Codartis.SoftVis.VisualStudioIntegration.UI"
                    xmlns:view="clr-namespace:Codartis.SoftVis.UI.Wpf.View;assembly=Codartis.SoftVis"
                    xmlns:viewModel="clr-namespace:Codartis.SoftVis.VisualStudioIntegration.UI"
                    xmlns:controls="clr-namespace:Codartis.Util.UI.Wpf.Controls;assembly=Codartis.Util"
                    xmlns:modeling1="clr-namespace:Codartis.SoftVis.VisualStudioIntegration.Modeling">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Codartis.SoftVis;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="/Codartis.SoftVis;component/UI/Wpf/View/AnimationConstants.xaml" />
        <ResourceDictionary Source="/QuickDiagramTool;component/UI/DecoratorPlacementDictionary.xaml" />
        <ResourceDictionary Source="/QuickDiagramTool;component/UI/DiagramNodeExpander.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <ui:StereotypeToImageUriConverter x:Key="StereotypeToImageUriConverter" />
    <ui:StereotypeToBackgroundBrushConverter x:Key="StereotypeToBackgroundBrushConverter" />

    <Style TargetType="{x:Type view:DiagramControl}">
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="DiagramFill" Value="White"/>
        <Setter Property="DiagramStroke" Value="Black"/>
        <Setter Property="PanAndZoomControlHeight" Value="120"/>
        <Setter Property="RelatedNodeCuePlacementDictionary" Value="{StaticResource RelatedNodeCuePlacementDictionary}"/>
        <Setter Property="MiniButtonPlacementDictionary" Value="{StaticResource MiniButtonPlacementDictionary}"/>
    </Style>

    <Style TargetType="{x:Type view:DiagramNodeControl}"
           d:DataContext="{d:DesignInstance {x:Type viewModel:RoslynDiagramNodeViewModel}}">
        <Setter Property="MinHeight" Value="46"/>
        <Setter Property="MaxHeight" Value="112"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="DiagramFill" Value="{Binding Path=Stereotype, Converter={StaticResource StereotypeToBackgroundBrushConverter}}"/>
    </Style>

    <DataTemplate DataType="{x:Type viewModel:RoslynDiagramNodeViewModel}">
        <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:DiagramNodeControl}}, Path=DiagramFill}"
                BorderBrush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:DiagramNodeControl}}, Path=DiagramStroke}" 
                BorderThickness="1"
                ToolTip="{Binding Path=FullName}">
            <StackPanel Orientation="Vertical">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="16"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Image Grid.Row="0" 
                           Margin="1" 
                           HorizontalAlignment="Left" 
                           Source="{Binding Path=Stereotype, Converter={StaticResource StereotypeToImageUriConverter}}"/>
                    <TextBlock x:Name="TextBlock"
                               Grid.Row="1" 
                               Margin="4,0,4,8" 
                               VerticalAlignment="Top" 
                               HorizontalAlignment="Center"
                               Text="{Binding Path=Name, Mode=OneWay}" 
                               TextWrapping="Wrap"/>
                </Grid>
                <controls:ConcealableExpander IsButtonVisible="False"
                                              Visibility="{Binding Path=DescriptionExists, Converter={StaticResource BooleanToVisibilityConverter}}"
                                              BorderBrush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type view:DiagramNodeControl}}, Path=DiagramStroke}" 
                                              BorderThickness=".5"
                                              IsExpanded="{Binding Path=IsDescriptionVisible, Mode=TwoWay}">
                    <TextBlock Margin="4,0,4,4"
                               FontSize="10"
                               TextWrapping="Wrap"
                               Text="{Binding Path=Description}"
                               ToolTip="{Binding Path=Description}"/>
                </controls:ConcealableExpander>
            </StackPanel>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Origin}" Value="{x:Static modeling1:ModelOrigin.SourceCode}">
                <Setter TargetName="TextBlock" Property="FontWeight" Value="Bold"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsAbstract}" Value="true">
                <Setter TargetName="TextBlock" Property="FontStyle" Value="Italic"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>