<UserControl x:Class="Codartis.SoftVis.UI.Wpf.View.DiagramViewportControl"
             x:Name="ThisControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:view="clr-namespace:Codartis.SoftVis.UI.Wpf.View"
             xmlns:viewModel="clr-namespace:Codartis.SoftVis.UI.Wpf.ViewModel"
             xmlns:behaviors="clr-namespace:Codartis.SoftVis.UI.Wpf.Behaviors"
             xmlns:controls="clr-namespace:Codartis.Util.UI.Wpf.Controls;assembly=Codartis.Util"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:converters="clr-namespace:Codartis.Util.UI.Wpf.Converters;assembly=Codartis.Util"
             xmlns:mouseTracking="clr-namespace:Codartis.Util.UI.Wpf.MouseTracking;assembly=Codartis.Util"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type viewModel:DiagramViewportViewModel}}">

    <!-- Warning: changes to this control's styles and content might require similar changes to DiagramImageControl too. -->

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Codartis.SoftVis;component/UI/Wpf/View/AnimationConstants.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <view:DiagramConnectorRouteCalculatorConverter x:Key="DiagramConnectorRouteCalculatorConverter" />
            <converters:AncestorFinderConverter x:Key="AncestorFinderConverter" />
            <converters:DescendantFinderByPropertyValueConverter x:Key="DescendantFinderByPropertyValueConverter" />

            <DataTemplate x:Key="DiagramNodeItemTemplate" DataType="{x:Type viewModel:DiagramNodeViewModel}">
                <view:DiagramNodeWithCuesControl>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding Path=DataContext.DiagramNodeDoubleClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DiagramViewportControl}}}"
                                                   CommandParameter="{Binding DiagramShape}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>

                    <b:Interaction.Behaviors>
                        <mouseTracking:MouseTrackingParticipantBehavior MouseTracker="{Binding ElementName=MouseTracker}"
                                                                        Role="TrackedElement" />
                    </b:Interaction.Behaviors>
                </view:DiagramNodeWithCuesControl>
            </DataTemplate>

            <DataTemplate x:Key="DiagramConnectorItemTemplate" DataType="{x:Type viewModel:DiagramConnectorViewModel}">
                <view:DiagramConnectorControl
                    AnimationDuration="{StaticResource DiagramShapeAnimationDuration}"
                    RoutePointsToAnimate="{Binding Path=RoutePoints, Mode=OneWay}">
                    <view:DiagramConnectorControl.DisplayedRoutePoints>
                        <MultiBinding Converter="{StaticResource DiagramConnectorRouteCalculatorConverter}">
                            <Binding Path="AnimatedRoutePoints" RelativeSource="{RelativeSource Self}" Mode="OneWay" />
                            <Binding Path="Rect.TopLeft" />
                        </MultiBinding>
                    </view:DiagramConnectorControl.DisplayedRoutePoints>
                </view:DiagramConnectorControl>
            </DataTemplate>

            <Style x:Key="DiagramNodeItemContainerStyle"
                   TargetType="{x:Type controls:AnimatedContentPresenter}"
                   d:DataContext="{d:DesignInstance {x:Type viewModel:DiagramNodeViewModel}}">
                <!-- Warning: Property setter order matters. AnimationDuration should be set first. -->
                <Setter Property="AnimationDuration" Value="{StaticResource DiagramShapeAnimationDuration}" />
                <Setter Property="LeftToAnimate" Value="{Binding Path=Rect.X}" />
                <Setter Property="TopToAnimate" Value="{Binding Path=Rect.Y}" />
                <Setter Property="Canvas.Left" Value="{Binding Path=Left, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Canvas.Top" Value="{Binding Path=Top, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Canvas.ZIndex" Value="{Binding Path=HierarchyLevel}"/>
            </Style>

            <Style x:Key="DiagramConnectorItemContainerStyle"
                   TargetType="{x:Type controls:AnimatedContentPresenter}"
                   d:DataContext="{d:DesignInstance {x:Type viewModel:DiagramConnectorViewModel}}">
                <!-- Warning: Property setter order matters. AnimationDuration should be set first. -->
                <Setter Property="AnimationDuration" Value="{StaticResource DiagramShapeAnimationDuration}" />
                <Setter Property="Left" Value="{Binding Path=Rect.X}" />
                <Setter Property="Top" Value="{Binding Path=Rect.Y}" />
                <Setter Property="Canvas.Left" Value="{Binding Path=Left, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Canvas.Top" Value="{Binding Path=Top, RelativeSource={RelativeSource Self}}" />
                <!-- No need to set Height and Width, those will adjust automatically to the content -->
            </Style>

            <ItemsPanelTemplate x:Key="DiagramShapeItemsPanel">
                <controls:AnimatedRenderTransformCanvas
                    AnimatedRenderTransform="{Binding Path=ViewportTransform, ElementName=ThisControl, Mode=OneWay}"
                    FastAnimationDuration="{StaticResource FastPanAndZoomAnimationDuration}"
                    MediumAnimationDuration="{StaticResource MediumPanAndZoomAnimationDuration}"
                    SlowAnimationDuration="{StaticResource SlowPanAndZoomAnimationDuration}"
                    MediumAnimationEasingFunction="{StaticResource MediumPanAndZoomAnimationEasingFunction}"
                    SlowAnimationEasingFunction="{StaticResource SlowPanAndZoomAnimationEasingFunction}" />
            </ItemsPanelTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <b:Interaction.Behaviors>
        <mouseTracking:MouseTrackerBehavior x:Name="MouseTracker"
                                            BackgroundElement="{Binding ElementName=ThisControl}" />
    </b:Interaction.Behaviors>

    <Grid Background="Transparent">

        <view:DiagramNodeItemsControl x:Name="DiagramNodeItemsControl"
                                      ItemsSource="{Binding DiagramNodeViewModels}"
                                      ItemsPanel="{StaticResource DiagramShapeItemsPanel}"
                                      ItemTemplate="{StaticResource DiagramNodeItemTemplate}"
                                      ItemContainerStyle="{StaticResource DiagramNodeItemContainerStyle}" />

        <view:DiagramConnectorItemsControl ItemsSource="{Binding DiagramConnectorViewModels}"
                                           ItemsPanel="{StaticResource DiagramShapeItemsPanel}"
                                           ItemTemplate="{StaticResource DiagramConnectorItemTemplate}"
                                           ItemContainerStyle="{StaticResource DiagramConnectorItemContainerStyle}" />

        <view:MiniButtonPanel x:Name="MiniButtonPanel"
                              DataContext="{Binding MiniButtonPanelViewModel}"
                              MouseFocusedUiElement="{Binding ElementName=MouseTracker, Path=CurrentUiElement}"
                              MouseFocusedDiagramShapeChangedCommand="{Binding Path=MouseFocusChangedCommand}"
                              PanAndZoomProviderElement="{Binding ElementName=MiniButtonPanel, Path=FocusedDiagramNodeControl,
                                        Converter={StaticResource AncestorFinderConverter}, ConverterParameter={x:Type controls:AnimatedRenderTransformCanvas}}"
                              PositionAndSizeProviderElement="{Binding ElementName=MiniButtonPanel, Path=FocusedDiagramNodeControl, 
                                        Converter={StaticResource AncestorFinderConverter}, ConverterParameter={x:Type controls:AnimatedContentPresenter}}"
                              DiagramVisualProviderElement="{Binding ElementName=MiniButtonPanel, Path=FocusedDiagramNodeControl}">

            <view:MiniButtonPanel.FocusedDiagramNodeControl>
                <MultiBinding Converter="{StaticResource DescendantFinderByPropertyValueConverter}"
                              ConverterParameter="{x:Static FrameworkElement.DataContextProperty}">
                    <Binding ElementName="DiagramNodeItemsControl" />
                    <Binding Path="FocusedDiagramShape" />
                </MultiBinding>
            </view:MiniButtonPanel.FocusedDiagramNodeControl>

            <b:Interaction.Behaviors>
                <!-- Marking MiniButtons as NonTrackedElement means that they don't try to steal focus so they don't flicker. -->
                <mouseTracking:MouseTrackingParticipantBehavior MouseTracker="{Binding ElementName=MouseTracker}"
                                                                Role="NonTrackedElement" />
            </b:Interaction.Behaviors>
        </view:MiniButtonPanel>

        <view:PanAndZoomControl Focusable="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Margin="10"
                                Height="{Binding Path=PanAndZoomControlHeight, ElementName=ThisControl, Mode=OneWay}"
                                Fill="Transparent"
                                Opacity="0.2"
                                PanAmount="50"
                                ZoomIncrement="{Binding Path=LargeZoomIncrement, ElementName=ThisControl, Mode=OneWay}"
                                ZoomValue="{Binding Path=ViewportZoom, ElementName=ThisControl, Mode=OneWay}"
                                ZoomCommand="{Binding Path=WidgetZoomCommand, ElementName=ThisControl, Mode=OneWay}"
                                VectorPanCommand="{Binding Path=WidgetPanCommand, ElementName=ThisControl, Mode=OneWay}"
                                CenterCommand="{Binding Path=WidgetZoomToContentCommand, ElementName=ThisControl, Mode=OneWay}" />

        <b:Interaction.Behaviors>
            <behaviors:MousePanAndZoomBehavior
                PanCommand="{Binding Path=MousePanCommand, ElementName=ThisControl, Mode=OneWay}"
                PanCursor="{x:Static Cursors.SizeAll}"
                ZoomCommand="{Binding Path=MouseZoomCommand, ElementName=ThisControl, Mode=OneWay}"
                MinZoom="{Binding Path=MinZoom, ElementName=ThisControl, Mode=OneWay}"
                MaxZoom="{Binding Path=MaxZoom, ElementName=ThisControl, Mode=OneWay}"
                ZoomValue="{Binding Path=ViewportZoom, ElementName=ThisControl, Mode=OneWay}"
                ZoomAmountPerWheelClick=".5" />
            <behaviors:KeyboardPanAndZoomBehavior
                PanCommand="{Binding Path=KeyboardPanCommand, ElementName=ThisControl, Mode=OneWay}"
                PanUpKey="{x:Static Key.Up}"
                PanDownKey="{x:Static Key.Down}"
                PanLeftKey="{x:Static Key.Left}"
                PanRightKey="{x:Static Key.Right}"
                PanAcceleration="2"
                PanDeceleration="6"
                PanMaxSpeed="50"
                ZoomCommand="{Binding Path=KeyboardZoomCommand, ElementName=ThisControl, Mode=OneWay}"
                MinZoom="{Binding Path=MinZoom, ElementName=ThisControl, Mode=OneWay}"
                MaxZoom="{Binding Path=MaxZoom, ElementName=ThisControl, Mode=OneWay}"
                ZoomValue="{Binding Path=ViewportZoom, ElementName=ThisControl, Mode=OneWay}"
                ZoomInKey="{x:Static Key.W}"
                ZoomOutKey="{x:Static Key.S}"
                ZoomAcceleration=".02"
                ZoomDeceleration=".06"
                ZoomMaxSpeed=".4" />
        </b:Interaction.Behaviors>
    </Grid>
</UserControl>