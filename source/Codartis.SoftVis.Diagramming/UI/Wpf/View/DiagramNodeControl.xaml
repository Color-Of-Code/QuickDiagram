<UserControl x:Class="Codartis.SoftVis.UI.Wpf.View.DiagramNodeControl"
             x:Name="ThisControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:Codartis.SoftVis.UI.Wpf.ViewModel"
             xmlns:view="clr-namespace:Codartis.SoftVis.UI.Wpf.View"
             xmlns:controls="clr-namespace:Codartis.SoftVis.Util.UI.Wpf.Controls;assembly=SoftVis.Util"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type viewModel:ContainerDiagramNodeViewModelBase}}">

    <UserControl.Resources>
        <ResourceDictionary>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <DataTemplate x:Key="ChildNodeItemTemplate" DataType="{x:Type viewModel:DiagramNodeViewModelBase}">
                <view:DiagramNodeControl x:Name="DiagramNodeControl"
                                         ActualSize="{Binding Path=Size, Mode=OneWayToSource}"
                                         FocusRequestedCommand="{Binding Path=FocusTracker.FocusCommand}">
                </view:DiagramNodeControl>
            </DataTemplate>

            <ItemsPanelTemplate x:Key="RelatedNodeCueItemsPanel">
                <controls:DecoratorPanel PlacementDictionary="{Binding RelatedNodeCuePlacementDictionary, 
                    RelativeSource={RelativeSource AncestorType={x:Type view:DiagramControl}}}"/>
            </ItemsPanelTemplate>

            <DataTemplate x:Key="RelatedNodeCue" 
                          DataType="{x:Type viewModel:RelatedNodeCueViewModel}">
                <Ellipse Fill="{Binding Path=DiagramStroke, ElementName=ThisControl}"
                         Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </DataTemplate>

            <Size x:Key="CueSize" Width="5" Height="5"/>

            <Style x:Key="RelatedNodeCueContainerStyle" 
                   TargetType="{x:Type ContentPresenter}" 
                   d:DataContext="{d:DesignInstance {x:Type viewModel:RelatedNodeCueViewModel}}">
                <Setter Property="Width" Value="{Binding Path=Width, Source={StaticResource CueSize}}"/>
                <Setter Property="Height" Value="{Binding Path=Height, Source={StaticResource CueSize}}"/>
                <Setter Property="controls:DecoratorPanel.PlacementKey" Value="{Binding PlacementKey}"/>
                <Setter Property="ContentTemplate" Value="{StaticResource RelatedNodeCue}"/>
            </Style>
            
            <ItemsPanelTemplate x:Key="ChildNodesItemsPanel">
                <StackPanel Orientation="Vertical" Margin="4,4,4,0"/>
            </ItemsPanelTemplate>

            <Style x:Key="ChildNodeContainerStyle" 
                   TargetType="{x:Type ContentPresenter}">
                <Setter Property="Margin" Value="0,0,0,4"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            
            <ContentPresenter Content="{Binding}"/>
            
            <ItemsControl ItemsSource="{Binding RelatedNodeCueViewModels}" 
                          ItemsPanel="{StaticResource RelatedNodeCueItemsPanel}"
                          ItemContainerStyle="{StaticResource RelatedNodeCueContainerStyle}"
                          Background="{x:Null}" />
        </Grid>

        <Border Grid.Row="1" 
                BorderThickness="1,0,1,1"
                BorderBrush="{Binding DiagramStroke, ElementName=ThisControl}"
                Background="{Binding DiagramFill, ElementName=ThisControl}">
            
            <ItemsControl x:Name="ChildItemsControl"
                          ItemsSource="{Binding ChildNodes}" 
                          ItemsPanel="{StaticResource ChildNodesItemsPanel}"
                          ItemTemplate="{StaticResource ChildNodeItemTemplate}"
                          ItemContainerStyle="{StaticResource ChildNodeContainerStyle}"/>
            
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ChildItemsControl, Path=HasItems}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </Grid>
</UserControl>
